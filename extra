NodeJS
=> Java => tomcat/Apacha
=> .net => ISS 
=> Php  => xamp/wamp
=> JavaScript Framework => NodeJS

/*******************************
        Open Soure/NPM
*******************************/
package.json
=> Entry point
=> Description
=> Packegs
=> Versions

json
[
    {
        name: 'Aa',
        class:'ui'
    },
    {
        name: 'BB',
        class:'Ai'
    }
]

/*******************************
        Step To Build Package.json
*******************************/
Step1:
Navigate to folder using cmd/terminal
Step2:
npm init
Step3:
Answer All question
{
  "name": "basicpackage",
  "version": "1.0.0",
  "description": "this is about packages",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "React",
    "Node"
  ],
  "author": "NareshIT",
  "license": "ISC"
}
Step 4:
Type Yes


/*******************************
  Install Packages
*******************************/
Local Packages => Local to the folder
Global Package => Local to the system

>>>>>Local Packages<<<<<<<<<
npm install <package name> / npm i <package name>
Step 1:
Navigate to folder using cmd/terminal
Step2:
npm i zone.js


>>>>>Global Packages<<<<<<<<<
package that help to start app, create-app, moniter app, build app
Step 1:
Navigate to folder using cmd/terminal
Step2:
npm i -g @aakashdeveloper/create-node-app

To install in window
> Run cmd as admin
> npm i -g @aakashdeveloper/create-node-app
For Mac
> sudo npm i -g @aakashdeveloper/create-node-app

/*******************************
   SetUp React
*******************************/
Step1:
Navigate to folder using cmd/terminal
Step2:
npm install -g create-react-app
Step3:
create-react-app firstapp
Step4:
cd firstapp
Step5:
npm start
Step6:
http://localhost:3000/

/*******************************
   Component
*******************************/
State & Props

Class Base Component      |     Functional Component
> Bit Heavy                       > Light 
> Can Handle State                > Cannot handle State
> More Logical Part               > More display

/*******************************
   Functional
*******************************/
///////////////////Es5(Ecma Script)//////////////////////////

function add(a,b){
  return a+b
}

add(1,2)

///////////////////Es6(Ecma Script)//////////////////////////

var add = (a,b) => { return a+b }

add(1,2)

let const

var a = 10
var a  // declaration
a =10  // assignment


var  => Redecalare and reassign
let  => cannot Redecalare but reassign 
const => cannot Redecalare nor reassign


Only first component(index.js)  will do the render
Rest we have to export

/*******************************
   Component
*******************************/
State
Props
State is local variable

A         ------Props-------->  B
State                           State


/*******
*******/
var a = 10
undefined
a > 10 ? "ok":"not ok"
"not ok"
a == 10 ? "ok":"not ok"
"ok"


/*******************************
   Map in Es6
*******************************/
//es5
var a = [1,2,3,4]
for(i=0;i<a.length;i++){ console.log(a[i])}
VM249:1 1
VM249:1 2
VM249:1 3
VM249:1 4
undefined

//es6
a.map((data)=>{console.log(data)})
VM337:1 1
VM337:1 2
VM337:1 3
VM337:1 4


<a href="abc.com">Click</a>


<NewsList newsdata={this.state.news}/>
> Sending State "news" with prop "newsdata" to component "NewsList"

function add(a,b)
{}

/*******************************
   Git Commands
*******************************/

// First
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/learngit.git
git push -u origin master

// All next time
git add .
git commit -m "first commit"
git push


/*******************************
      Filter In Es6
*******************************/
var a = [0,1,2,3]
a.map((data)=> {return (data*1)})
  a.filter((data)=> {return (data*1)})


  filter will return only values for which its true
  map return all the value with the logic


var ages = [32, 33, 16, 40];
ages.filter((age) => {  return age >= 18; });


var a = ['apple','mango','banana']
undefined
a.indexOf('mango')
1
a[0]
"apple"
a[1]
"mango"
a.indexOf('orange')
-1
a.indexOf('kiwi')
-1

from parent to child
=> simple Props
from child to parent
=> props with function




function add(a,b){
  return a+b
}


add(1,2)

/*******************************
      Filter In Es6
*******************************/
Grid basic
Button
panel
navbar


/*******************************
     Fake Api
*******************************/
npm install -g json-server

json-server --watch db.json --port 8900